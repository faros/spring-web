<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>be.faros</groupId>
	<artifactId>spring-web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-web</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- Reactive counterpart: spring-boot-starter-starter-webflux -->
	    </dependency>

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
		<!--</dependency>-->

		<!-- TODO mustache_01
			By adding the spring-boot-starter-mustache to your classpath spring-boot will autoconfigure a MustacheViewResolver.

			INFO:
				There exist 2 Java implementations of the Mustache template language:

					1. https://github.com/samskivert/jmustache (= the one that spring-boot-starter-mustache includes)
						There exists another Java implementation of Mustache (see 2), but the motivations for this version are sufficiently different as to justify
						(in the author's mind, anyhow) the duplication.

						<dependency>
						  <groupId>com.samskivert</groupId>
						  <artifactId>jmustache</artifactId>
						  <version>1.14</version>
						</dependency>

					2. https://github.com/spullara/mustache.java

						<dependency>
						  <groupId>com.github.spullara.mustache.java</groupId>
						  <artifactId>compiler</artifactId>
						  <version>0.9.5</version>
						</dependency>

					Documentation:
					https://www.javadevjournal.com/spring-boot/spring-boot-mustache/

					If you don't use spring boot, you can of course add one of above dependencies yourself.
-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mustache</artifactId>
		</dependency>

		<!-- TODO actuator_security_02a
			If you add spring security to your classpath, all actuator endpoints (except for: /actuator/health, /actuator/info) will be secured
			You can of course configure spring security to open this endpoints. Look at WebConfig class
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!--
			Since Spring Boot 2.x Actuator, by default, all Actuator endpoints are now placed under the /actuator path
			For more info about the differences between Spring boot 1.x & 2.x
				https://aboullaite.me/actuator-in-spring-boot-2-0/
				https://www.baeldung.com/spring-boot-actuators
		-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
