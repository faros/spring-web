server.port=8085

###################### JSP ######################

    # JSTL prefix / suffix
    ######################

    #spring.mvc.view.prefix=classpath:/WEB-INF/
    #spring.mvc.view.suffix=.html

###################### MUSTACHE ######################

    # Mustache prefix / suffix. When you use one of these templating engines (FreeMarker, Groovy, Thymeleaf, Mustache) with the default configuration,
    # your templates are picked up automatically from src/main/resources/templates
    #   https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-spring-mvc-template-engines
    ######################

    #spring.mustache.prefix=classpath:/templates/
    #spring.mustache.suffix=.mustache

    # Whether all request attributes should be added to the model prior to merging with the template.
    # Ex. Spring security adds csrf support by adding a _csrf parameter to the request that contains the token that you want to make available in the mustache template
    ######################

    spring.mustache.expose-request-attributes=true

###################### SECURITY ######################

    # If Spring Security is on the classpath, then web applications are secured by default.
    # The default UserDetailsService has a single user. The user name is 'user', and the password is random and is printed at INFO level when the application starts
    # You can change this by adjusting properties below:
    ######################
    spring.security.user.name=user
    spring.security.user.password=pwd


###################### ACTUATOR ######################

    # TODO actuator_01a
    # Documentation:
    #   https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
    #
    # Spring Boot 2.0 takes a slightly different approach to ensure web endpoints security
    #   By default, all actuator endpoints (except for 'shutdown') are ENABLED. Change it to false if you don't want that:
    ######################

    #management.endpoints.enabled-by-default=false

    # TODO actuator_01b
    # Activating the shutdown endpoint:
    ######################

    #management.endpoints.shutdown.enabled=true

    #TODO actuator_01c
    # To be remotely accessible though, most endpoints (except /actuator/health, /actuator/info) have to be EXPOSED via JMX or HTTP
    # Overview of the endpoints and if they are exposed:
    #     https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html#production-ready-endpoints-exposing-endpoints
    ######################

    management.endpoints.web.exposure.include=*
    #management.endpoints.web.exposure.exclude=env
    #management.endpoints.jmx.exposure.include=*